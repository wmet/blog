<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>代码客</title>
  <icon>https://www.gravatar.com/avatar/606703794540a33f1ad2450d87de66ba</icon>
  <subtitle>热爱代码/自动化</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.wzjs010.cc/"/>
  <updated>2018-12-04T10:16:25.906Z</updated>
  <id>https://blog.wzjs010.cc/</id>
  
  <author>
    <name>Milk</name>
    <email>wme2018@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用软件总结2</title>
    <link href="https://blog.wzjs010.cc/2018/12/04/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%80%BB%E7%BB%932/"/>
    <id>https://blog.wzjs010.cc/2018/12/04/常用软件总结2/</id>
    <published>2018-12-04T09:30:35.000Z</published>
    <updated>2018-12-04T10:16:25.906Z</updated>
    
    <content type="html"><![CDATA[<p>Pc常用软件总结  </p><h3 id="MarkDown编辑器"><a href="#MarkDown编辑器" class="headerlink" title="MarkDown编辑器"></a>MarkDown编辑器</h3><p>Mou、Typed、Ulysess、Macdown  </p><ul><li>马克飞象  <ol><li><a href="http://marxi.co/" target="_blank" rel="noopener">官网</a>  </li><li><a href="http://maxiang.info/client_zh" target="_blank" rel="noopener">马象下载</a>  </li><li><a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">Chrome应用</a>  </li></ol></li><li><a href="http://markeditor.farbox.com/" target="_blank" rel="noopener">MarkEditor</a>  </li><li><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>  <h3 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a>代码编辑</h3></li><li>Sublimetext3  </li><li>WebStorm  </li><li>PhpStorm  <h3 id="开发环境及调试、托管相关工具"><a href="#开发环境及调试、托管相关工具" class="headerlink" title="开发环境及调试、托管相关工具"></a>开发环境及调试、托管相关工具</h3></li><li><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a> &amp;&amp;<a href="https://www.vmware.com/cn.html" target="_blank" rel="noopener">VMware 虚拟机：面向桌面、应用、公有和混合云</a>， 虚拟机软件</li><li><a href="https://www.vagrantup.com/" target="_blank" rel="noopener">Vagrant</a></li><li><a href="https://www.navicat.com.cn/" target="_blank" rel="noopener">Navicat</a>，mysql 工具</li><li><a href="http://www.telerik.com/fiddler" target="_blank" rel="noopener">Fiddler</a> ，接口调试</li><li><a href="https://www.wireshark.org/download.html" target="_blank" rel="noopener">Wireshark</a>，数据抓包</li><li><a href="http://www.netsarang.com/" target="_blank" rel="noopener">Xmanager =&gt;XShell等</a> ，<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">Putty</a> ssh连接</li><li><a href="https://github.com" target="_blank" rel="noopener">GitHub</a> &amp;&amp; <a href="https://tortoisesvn.net/index.zh.html" target="_blank" rel="noopener">TortoiseSVN</a> Git Svn,龟Git.Svn下载</li><li><a href="http://www.phpstudy.net/" target="_blank" rel="noopener">PHPStudy</a> &amp;&amp; <a href="http://bt.cn" target="_blank" rel="noopener">宝塔面板</a> 方便php开发环境<h3 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h3></li><li><a href="http://www.phpcomposer.com/" target="_blank" rel="noopener">PHP Composer 中文网 </a>、<a href="http://php.net/" target="_blank" rel="noopener">PHP: Hypertext Preprocessor</a></li><li><a href="https://golang.org/" target="_blank" rel="noopener">The Go Programming Language</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://www.java.com/" target="_blank" rel="noopener">Java</a></li><li><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a></li><li><a href="http://www.ruby-lang.org/" target="_blank" rel="noopener">Ruby</a></li></ul><h4 id="腾讯浏览器、微信调试"><a href="#腾讯浏览器、微信调试" class="headerlink" title="腾讯浏览器、微信调试"></a>腾讯浏览器、微信调试</h4><ol><li><a href="https://x5.tencent.com/tbs/guide.html" target="_blank" rel="noopener">TBSSDK</a>/<a href="https://x5.tencent.com/tbs/guide/debug.html" target="_blank" rel="noopener">TBS Stdio</a></li><li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html?t=201715" target="_blank" rel="noopener">微信WEB调试工具</a><h4 id="网站部署"><a href="#网站部署" class="headerlink" title="网站部署"></a>网站部署</h4></li><li>FlashFXP<h4 id="常用的安卓模拟器"><a href="#常用的安卓模拟器" class="headerlink" title="常用的安卓模拟器"></a>常用的安卓模拟器</h4><ol><li>夜神   网络代理</li><li>海马玩  网络代理</li><li>android stdio  安卓sdk avd</li><li>Andy  网络代理</li><li>blue stack 网络代理无法设置</li><li>tencent手游模拟器  </li></ol></li></ol><h3 id="网摘资料笔记保存工具"><a href="#网摘资料笔记保存工具" class="headerlink" title="网摘资料笔记保存工具"></a>网摘资料笔记保存工具</h3><ul><li>360doc  </li><li>onenote</li><li>印象笔记 Evernote  &gt; 快速摘录网站内容<br><a href="https://www.yinxiang.com/download/" target="_blank" rel="noopener">官网下载印象笔记</a></li><li>GitBook &amp;&amp; Calibre &gt; markdown文件快速制作ebook<br><a href="https://www.gitbook.com/editor" target="_blank" rel="noopener">GitBook Editor官方下载</a><br><a href="http://calibre-ebook.com/" target="_blank" rel="noopener">calibre - E-book management</a></li><li>WinHTTrack Website Copier<br><a href="http://www.httrack.com/" target="_blank" rel="noopener">HTTrack Website Copier官网下载</a></li><li><a href="http://yun.baidu.com/" target="_blank" rel="noopener">百度网盘</a> </li><li>冰点文库(百度文库下载工具)<h4 id="Wiki程序"><a href="#Wiki程序" class="headerlink" title="Wiki程序"></a>Wiki程序</h4></li><li>amwiki  <blockquote><p>安装<code>npm install -g amwiki</code>  </p></blockquote></li><li>wiki.php  <blockquote><p>wiki.php运行在php平台，是基于Markdown的wiki程序。你的Markdown存放在 wiki.php/_posts 目录下，以.md后缀的文件形式存放，程序简陋不支持在线编辑和备份，你可以尝试将_posts目录纳入git或svn中达到团队协作。<br>git clone <a href="https://github.com/cmxiaocai/wiki.php.git" target="_blank" rel="noopener">https://github.com/cmxiaocai/wiki.php.git</a></p></blockquote></li><li>deepwiki  <h3 id="常用浏览器"><a href="#常用浏览器" class="headerlink" title="常用浏览器"></a>常用浏览器</h3></li><li><a href="https://www.mozilla.org/" target="_blank" rel="noopener">Firefox浏览器</a></li><li><a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="noopener">Chrome（桌面版）下载</a></li><li>~~IE，有些网站还是不得不用IE ~~。换360安全浏览器，不用装太多插件，可以IE模式。装个adblock和llastpass 即可。</li></ul><h3 id="浏览器扩展"><a href="#浏览器扩展" class="headerlink" title="浏览器扩展"></a>浏览器扩展</h3><ul><li>chrome<ol><li>Adblock Plus—Adblock Plus 已被超过 1 亿台设备使用，是世界上最受欢迎的广告拦截软件</li><li>Adobe Acrobat–将当前网页转换为 Adobe PDF 文件（仅限 Windows）</li><li>Copy as Markdown–Copy Link or Image as Markdown code</li><li>crxMouse Chrome™ Gestures, Gestures for Chrome(TM)汉化版.方便,快捷,充分发掘鼠标的所有操作.功能包括:鼠标手势,超级拖曳,滚轮手势,摇杆手势,平滑滚动,标签页列表等.</li><li>Google 文档的离线功能，利用 Google 文档产品系列离线编辑文件。</li><li>Google翻译，浏览网页时可轻松查看翻译版本。由Google翻译小组提供。</li><li>JetBrains IDE Support，HTML/CSS/JavaScript editing and JavaScript debugging using JetBrains IDEs.</li><li>jsonView jsonViewer json formatter 格式化，格式化、着色、美观、易读… jsonView处理了其他该类插件中文字符的bug,支持 json 和 jsonp 格式</li><li>Just Read，A customizable reader extensi</li><li>LastPass: Free Password Manager，LastPass,屡获殊荣的密码管理器,保存你的密码,让你安全访问任何计算机和移动设备</li><li>Postman，调试接口利器</li><li>Proxy SwitchyOmega，轻松快捷地管理和切换多个代理设置</li><li>Push to Kindle，Send web articles to your Kindle</li><li>Quick Javascript Switcher，Quick way to enable/disable Javascript</li><li>Secure Shell，Terminal emulator and SSH client ，Chrome 应用</li><li>User-Agent Switcher for Chrome ，Spoofs &amp; Mimics User-Agent strings.</li><li>拷贝为 Markdown，将你在页面中选中的HTML格式转化为Markdown格式。</li><li>滴答清单 - Todo &amp; 任务提醒，简洁, 易用的待办和任务管理工具, 帮助您高效完成所有的事情, 合理规划时间, 让生活更轻松！</li><li>金山词霸鼠标取词</li></ol></li><li>firefox<ol><li>二维码扫描器，解码 QRCode（二维码），无需网络连接</li><li>金山词霸鼠标取词，辅助金山词霸在浏览器中实现鼠标取词</li><li>网页翻译，使用火狐浏览英文网页，帮您一键翻译成中文，阅读无障碍。使用有道网页翻译2.0，您既可以选择全文翻译，也能按照您的英文水平、只翻译相应部分的词汇，阅读理解更方便。</li><li>网站 IP 信息查询，查询当前访问网站的 IP 地址的地理位置，国旗，所属 ASN，端口开放信息等信息。</li><li>印象笔记·剪藏，使用印象笔记扩展程序一键保存精彩网页内容到印象笔记帐户</li><li>Adblock Plus，广告已成往事</li><li>AutoProxy-ng，GFW was yesterday!</li><li>Build Link Markdown ，Build a markdown link from the selected text or the current page’s title.</li><li>Cookies Manager+</li><li>Dorando keyconfig</li><li>FEBE,Backup your Firefox data</li><li><del>Firebug,Web Development Evolved</del>,下岗了，用火狐自带的调试器吧，Ctrl+shift+q</li><li>Gesture Translate </li><li>HostAdmin,HostAdmin是一个帮你管理Hosts的插件，它提供了一套增强的Hosts文件语法，帮你轻松完成切换Host的工作</li><li>HttpRequester,A tool for easily making HTTP requests (GET/PUT/POST/DELETE</li><li>JSON Lite ,Fast JSON viewer - highlights, shows items count/size, handles large files</li><li>JSON-DataView,Displays JSON data in a collapsible tree structure with syntax highlights.</li><li>LastPass: Free Password Manager,Last Password you will ever need</li><li>Markdown Viewer</li><li>Push to Kindle</li><li>RESTClient,RESTClient, a debugger for RESTful web services.</li><li>S3.Google Translator</li><li>sf-note-ext</li><li>Show Location</li><li>User-Agent Switcher,Quickly and easily switch between popular user-agent strings.  <h3 id="日常使用工具"><a href="#日常使用工具" class="headerlink" title="日常使用工具"></a>日常使用工具</h3></li></ol></li><li><del><a href="https://im.qq.com/pcqq/" target="_blank" rel="noopener">腾讯QQ</a></del> -&gt;<a href="http://tim.qq.com/" target="_blank" rel="noopener">腾讯TIM</a>、 <a href="http://weixin.qq.com/" target="_blank" rel="noopener">微信PC端</a></li><li><del><a href="http://cidian.youdao.com/" target="_blank" rel="noopener">有道词典</a></del>  or <a href="http://cp.iciba.com/" target="_blank" rel="noopener">金山词霸</a></li><li><a href="https://www.teamviewer.com/zhCN/" target="_blank" rel="noopener">TeamViewer</a></li><li><a href="https://get.adobe.com/cn/reader/completion/adm/?exitcode=0&amp;type=install&amp;re=0&amp;appId=200" target="_blank" rel="noopener">Pdf文档查看</a></li><li><a href="https://www.adobe.com/cn/products/photoshop.html?promoid=YFRVGMH9&amp;mv=other" target="_blank" rel="noopener">PhotoShop</a></li><li><a href="http://www.foxmail.com/" target="_blank" rel="noopener">Foxmail</a> &amp; <del><a href="https://www.getmailbird.com/" target="_blank" rel="noopener">MailBird</a> &amp;<a href="https://www.mozilla.org/zh-CN/thunderbird/" target="_blank" rel="noopener">Thunderbird </a></del></li></ul><h3 id="同步盘"><a href="#同步盘" class="headerlink" title="同步盘"></a>同步盘</h3><ul><li><a href="https://onedrive.live.com/?id=root&amp;cid=92A074F8A4C1889A" target="_blank" rel="noopener">OneDrive</a></li><li><a href="https://drive.google.com/drive/u/0/my-drive" target="_blank" rel="noopener">Google云端硬盘</a><h3 id="代理上网"><a href="#代理上网" class="headerlink" title="代理上网"></a>代理上网</h3></li><li><a href="https://github.com/shadowsocks/" target="_blank" rel="noopener">shadowsocks</a>、<a href="https://shadowsocks.org/" target="_blank" rel="noopener">Shadowsocks</a></li><li>SScap</li><li><a href="http://www.vpngate.net/cn/download.aspx" target="_blank" rel="noopener">VPN Gate 下载</a></li><li><del><a href="https://openvpn.net/" target="_blank" rel="noopener">OpenVpn</a></del></li><li><a href="https://github.com/xtaci/kcptun" target="_blank" rel="noopener">Kcptun GitHub</a><a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="noopener">GUI for KCPTun windows client</a></li><li><a href="http://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a></li></ul><h3 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h3><ul><li><a href="https://ticktick.com/" target="_blank" rel="noopener">TickTick</a><br>有客户端和浏览器插件，方便记录生活琐事，管理工作任务，让你的生活变得简单。</li><li><a href="https://www.wunderlist.com/#/lists/inbox" target="_blank" rel="noopener">Wunderlist</a><br><a href="https://www.wunderlist.com/zh/download/" target="_blank" rel="noopener">下载奇妙清单 - 为你的所有设备下载最佳待办事项应用</a></li></ul>]]></content>
    
    <summary type="html">
    
      日常生活中的常用软件
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="常用软件" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="生活" scheme="https://blog.wzjs010.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="软件" scheme="https://blog.wzjs010.cc/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客 Git搭建步骤</title>
    <link href="https://blog.wzjs010.cc/2018/12/04/hexo%E5%8D%9A%E5%AE%A2-Git%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/"/>
    <id>https://blog.wzjs010.cc/2018/12/04/hexo博客-Git搭建步骤/</id>
    <published>2018-12-04T08:43:00.000Z</published>
    <updated>2018-12-04T09:05:00.842Z</updated>
    
    <content type="html"><![CDATA[<ol><li>前提条件<br> 安装git软件和nodejs</li><li>执行<code>npm install -g hexo-cli</code>全局安装</li><li><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>常用指令  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;xxx&quot; #新建文章</span><br><span class="line">hexo g   生成html</span><br><span class="line">hexo d   发布文章</span><br></pre></td></tr></table></figure></li><li><p>配置git，几个关键的配置项目  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr"> url:</span> <span class="attr">https://blog.wzjs010.cc</span>  <span class="comment">#网址的url地址，配合Cname使用</span></span><br><span class="line"><span class="attr"> deploy:</span>                       <span class="comment">#发布的git地址</span></span><br><span class="line"><span class="attr">   type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">   repo:</span> <span class="string">git@github.com:wmet/wmet.github.io.git</span></span><br><span class="line"><span class="attr">   branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">   message:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line"><span class="string">```</span>     </span><br><span class="line"><span class="string">新建个master分支，用来存放生成的html文件</span>  </span><br><span class="line"><span class="string">然后建立hexo分支，用来存放源码</span>  </span><br><span class="line"><span class="string">通过`git</span> <span class="string">checkout</span> <span class="string">hexo,git</span> <span class="string">checkout</span> <span class="string">master</span> <span class="string">`来切换分支</span>  </span><br><span class="line"><span class="string">```git</span></span><br><span class="line"> <span class="string">git</span> <span class="string">checkout</span> <span class="string">hexo</span>  <span class="comment">#切换hexo分支</span></span><br><span class="line"> <span class="string">hexo</span> <span class="string">new</span> <span class="string">"article name"</span></span><br><span class="line"> <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"> <span class="string">hexo</span> <span class="string">g</span> </span><br><span class="line"> <span class="string">hexo</span> <span class="string">d</span> <span class="comment">#发布到github</span></span><br><span class="line"> <span class="string">git</span> <span class="string">commit</span> <span class="bullet">-am</span> <span class="string">"new article"</span>  </span><br><span class="line"> <span class="string">git</span> <span class="string">push</span>   <span class="comment">#推送hexo分支</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;前提条件&lt;br&gt; 安装git软件和nodejs&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;npm install -g hexo-cli&lt;/code&gt;全局安装&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。
      
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="博客" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="git" scheme="https://blog.wzjs010.cc/tags/git/"/>
    
      <category term="hexo" scheme="https://blog.wzjs010.cc/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>感想</title>
    <link href="https://blog.wzjs010.cc/2017/08/03/%E6%84%9F%E6%83%B3/"/>
    <id>https://blog.wzjs010.cc/2017/08/03/感想/</id>
    <published>2017-08-03T13:20:07.000Z</published>
    <updated>2018-12-04T08:26:41.002Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>人生是一个不断进行着的故事，故事的好坏、精彩程序由我们自己去演绎。</p></blockquote><p>长这么大，很少去回顾自己经历的事情，每当梦中闪现过往的人和事情，总有些怀念的心情。这么大了，有的人已经离自己远去，永远不在回来了，还没有好好的去珍惜和他们在一起的日子。所以，活在当下，珍惜眼前人，是再也正确不过的了。</p><p>依稀记得小时候、童年拾麦穗，骑自行车，奶奶给咯的菜饺，很多很多的事，再也回不过去了，就绝的很是可惜。在中国，应该做些正义的事情，不畏强权，有自己的想法，就应该去实施。如果有机会出过，有了更大的空间，有了更大的事业，帮助更多的人。研究更新更高级的东西，人生除了享乐还有很多有意义的事情去做，放大自己的思维，去做自己能做的事情。</p>]]></content>
    
    <summary type="html">
    
      感想
    
    </summary>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感想" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="感想" scheme="https://blog.wzjs010.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>程序员的道路</title>
    <link href="https://blog.wzjs010.cc/2017/07/27/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E9%81%93%E8%B7%AF/"/>
    <id>https://blog.wzjs010.cc/2017/07/27/程序员的道路/</id>
    <published>2017-07-27T14:28:52.000Z</published>
    <updated>2018-12-04T08:26:41.002Z</updated>
    
    <content type="html"><![CDATA[<p>今天看了一则旧闻，曾经自己佩服的一家公司“猿团教育”倒下了，短短不到两年时间吧，他曾经也创造了很多成就，他的经历也值得回顾一下，算是前车之鉴吧。</p><p>在前两年，自己刚开始学习程序，对程序的了解还很菜，基础的东西什么都不太懂，好在有一个自由的工作平台，工作不忙，可以充电，在一知半解的情况下，于网络中寻求学习的视频，猿团教育的apicloud、thinkphp等课程通俗易懂，很快就把他们网址加入了网络收藏夹，每天业余时间看、学习，当时看视频电脑上的时间，都是凌晨录制的，可想而知他们是多么的敬业。</p><p>慢慢的听到他们融资了，公司壮大了，有了很宽敞的办公场所。后来更多时间是忙于自己的工作，无暇关注和更多的去学习，但还是很佩服这家公司的，CEO很年轻，就能有这么大的成就。可想是很当时的努力、谦虚是分不开的。</p><p>只到今天想看下他最近怎么样了，看下他的变化，但网站打不开，百度搜索了下，才知道最近他们公司完了，欠薪很多。简单的浏览了下，发现融资后他开立分公司、买跑车、国外度假等，当初的谦虚低调不存在了，这样的结果也是很惋惜的。</p><p>所以，成功前谦虚努力，成功后更应保持，不要有膨胀的心，才能走的更远。作为一个程序员，更应该不断提升自己的技术水平、应该时刻保持谦卑心态，不管多成功，不忘初心方能得始终。</p><p>参考链接：</p><ul><li><a href="http://blog.sina.com.cn/s/blog_15382e50c0102wr0w.html" target="_blank" rel="noopener">初笋科技：猿团6个月时间从估值2000万到2亿–访猿团CEO谢恩明<em>成都猿团科技</em>新浪博客</a></li><li><a href="https://www.baidu.com/s?wd=%E7%8C%BF%E5%9B%A2%E7%A7%91%E6%8A%80&amp;pn=10&amp;oq=%E7%8C%BF%E5%9B%A2%E7%A7%91%E6%8A%80&amp;ie=utf-8&amp;rsv_idx=1&amp;rsv_pq=d752cf6400038ac2&amp;rsv_t=091fgHcaqU2ZngBry3ZUutBewZQxpAmBrXx3D608t%2BpezGO5u3yu7%2FfUDGk" target="_blank" rel="noopener">猿团科技_百度搜索</a></li><li><a href="http://news.chengdu.cn/2017/0419/1870213.shtml" target="_blank" rel="noopener">成都猿团科技CEO失联 曾获两轮天使投资<em>新闻资讯</em>新闻首页_成都全搜索</a></li><li><a href="https://baijiahao.baidu.com/s?id=1565106651647180&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">爆料：猿团科技CEO捐款逃跑后买豪宅豪车，旗下员工讨债无门！</a></li><li><a href="http://sc.sina.com.cn/news/b/2017-04-20/detail-ifyepsch1785667.shtml" target="_blank" rel="noopener">猿团科技CEO被曝失联欠薪 获天使投资成立不到2年<em>新浪四川</em>新浪网</a></li></ul>]]></content>
    
    <summary type="html">
    
      感想
    
    </summary>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感想" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="感想" scheme="https://blog.wzjs010.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="程序员" scheme="https://blog.wzjs010.cc/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>git中遇到的一些问题</title>
    <link href="https://blog.wzjs010.cc/2017/07/25/git%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.wzjs010.cc/2017/07/25/git中遇到的一些问题/</id>
    <published>2017-07-24T17:52:44.000Z</published>
    <updated>2018-12-04T08:26:41.002Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git单机多用户设置"><a href="#git单机多用户设置" class="headerlink" title="git单机多用户设置"></a>git单机多用户设置</h3><p>有时候不同的项目需要用不同的账户，可以这样配置：</p><ol><li><p>新建user2的SSH Key<br>新建SSH key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh     # 切换到C:\Users\Administrator\.ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;mywork@email.com&quot;  # 新建工作的SSH key</span><br><span class="line">#设置名称为id_rsa_work</span><br><span class="line"> Enter file in which to save the key (/c/Users/Administrator/.ssh/id_rsa): id_rsa_work</span><br></pre></td></tr></table></figure></li><li><p>新密钥添加到SSH agent中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash</span><br><span class="line">ssh-add ~/.ssh/id_rsa_work</span><br></pre></td></tr></table></figure></li><li><p>修改config文件<br>在~/.ssh目录下找到config文件，如果没有就创建：<br>touch config        # 创建config<br>然后修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 该文件用于配置私钥对应的服务器</span><br><span class="line"># Default github user(first@mail.com)</span><br><span class="line">Host github.com</span><br><span class="line"> HostName github.com</span><br><span class="line"> User git</span><br><span class="line"> IdentityFile C:/Users/Administrator/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"> # second user(second@mail.com)</span><br><span class="line"> # 建一个github别名，新建的帐号使用这个别名做克隆和更新</span><br><span class="line">Host github2</span><br><span class="line"> HostName github.com</span><br><span class="line"> User git</span><br><span class="line"> IdentityFile C:/Users/Administrator/.ssh/id_rsa_work</span><br></pre></td></tr></table></figure></li><li><p>打开新生成的~/.ssh/id_rsa2.pub文件，将里面的内容添加到GitHub后台。</p></li><li>不同项目remote设置<br> 不同的项目配置不同url<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url = github2:username/myreps.git</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br></pre></td></tr></table></figure></li></ol><h3 id="Git强制更新本地仓库"><a href="#Git强制更新本地仓库" class="headerlink" title="Git强制更新本地仓库"></a>Git强制更新本地仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all  </span><br><span class="line">git reset --hard origin/master </span><br><span class="line">#git reset --hard head</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="强覆盖用本地代码替代git仓库内容"><a href="#强覆盖用本地代码替代git仓库内容" class="headerlink" title="强覆盖用本地代码替代git仓库内容"></a>强覆盖用本地代码替代git仓库内容</h3><p>  git push -f（可解决Non-fast-forward）</p><h3 id="Git一次推送多个服务器"><a href="#Git一次推送多个服务器" class="headerlink" title="Git一次推送多个服务器"></a>Git一次推送多个服务器</h3><p>编辑本地仓库的.git/config文件即可达到目的。<br>[remote “all”]<br>    url = <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:luoshupeng/commonuseppa.git<br>    url = <a href="mailto:git@gitcafe.com" target="_blank" rel="noopener">git@gitcafe.com</a>:chinesedragon/commonuseppa.git<br>    url = <a href="mailto:chinesedragon@gitcd.com" target="_blank" rel="noopener">chinesedragon@gitcd.com</a>:/commonuseppa<br>这样，使用git push all即可一键Push到多个远程仓库中。</p><h3 id="git-删除本地分支和远程分支"><a href="#git-删除本地分支和远程分支" class="headerlink" title="git 删除本地分支和远程分支"></a>git 删除本地分支和远程分支</h3><p>【git 删除本地分支】<br>git branch -D br<br>【git 删除远程分支】<br>git push origin :br  (origin 后面有空格)<br>git push -f</p><h3 id="git放弃对当前文件夹的所有文件的修改？"><a href="#git放弃对当前文件夹的所有文件的修改？" class="headerlink" title="git放弃对当前文件夹的所有文件的修改？"></a>git放弃对当前文件夹的所有文件的修改？</h3><p>git checkout .</p><h3 id="撤销尚未提交的修改"><a href="#撤销尚未提交的修改" class="headerlink" title="撤销尚未提交的修改"></a>撤销尚未提交的修改</h3><p>git checkout head . （尚未git add ）</p><h3 id="本地代码回滚和远程代码库回滚"><a href="#本地代码回滚和远程代码库回滚" class="headerlink" title="本地代码回滚和远程代码库回滚"></a>本地代码回滚和远程代码库回滚</h3><p>git代码库回滚: 指的是将代码库某分支退回到以前的某个commit id<br>【本地代码库回滚】：<br>git reset –hard commit-id :回滚到commit-id，讲commit-id之后提交的commit都去除 （已经add commit的 ）<br>git reset –hard HEAD~3：将最近3次的提交回滚<br>【远程代码库回滚】：<br>这个是重点要说的内容，过程比本地回滚要复杂<br>应用场景：自动部署系统发布后发现问题，需要回滚到某一个commit，再重新发布<br>原理：先将本地分支退回到某个commit，删除远程分支，再重新push本地分支<br>操作步骤：<br>1、git checkout the_branch<br>2、git pull<br>3、git branch the_branch_backup //备份一下这个分支当前的情况<br>4、git reset –hard the_commit_id //把the_branch本地回滚到the_commit_id<br>5、git push origin :the_branch //删除远程 the_branch<br>6、git push origin the_branch //用回滚后的本地分支重新建立远程分支<br>7、git push origin :the_branch_backup //如果前面都成功了，删除这个备份分支</p>]]></content>
    
    <summary type="html">
    
      git
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Git" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/Git/"/>
    
    
      <category term="git" scheme="https://blog.wzjs010.cc/tags/git/"/>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>最近感想</title>
    <link href="https://blog.wzjs010.cc/2017/07/25/%E6%9C%80%E8%BF%91%E6%84%9F%E6%83%B3/"/>
    <id>https://blog.wzjs010.cc/2017/07/25/最近感想/</id>
    <published>2017-07-24T16:56:39.000Z</published>
    <updated>2018-12-04T08:26:41.002Z</updated>
    
    <content type="html"><![CDATA[<h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><p>今天自己的另一半去了一个新的地方工作，那个地方在城市的另一边，还好管住。这意味着以后的一段时间里每天我会有自己的时间研究自己想研究的东西，再也不会被人打断了。一切人东西都是双面性的，她在有她的好处，每天可以聊聊天，做饭、刷碗，都是些琐事，但也过的“充实”。</p><p>她不在的这段时间里，我该怎样安排自己的工作和生活？</p><ol><li>在公司还是以公司工作为主，公司下班的那会儿自己可以做另外的任务。</li><li>晚上回来后开始研究技术，一个技术、一个框架、一个项目的去研究，争取研究精，注意核心的实现细节。</li><li>每天依然应该除了工作学习还应该去锻炼，跑步啥的。偶尔跑跑出出汗应该也是不错的。</li><li>可以和曾经一块工作的朋友聊聊坐坐，看看有没有什么好项目，新的点子。</li><li>每天家里应该保持整洁、饭也应该按时吃。</li><li>每天应该坚持学习，不求多，但求精。从点滴去积累。</li></ol><p>总之、有了更多的自由，不用担心吵住它或被她吵住了。自由的安排、实行吧。</p><p>还有，我觉得日常生活、技术笔记应该经常去记录，应该经常去回头看自己的经历并总结，避免失误。</p>]]></content>
    
    <summary type="html">
    
      感想
    
    </summary>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感想" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="感想" scheme="https://blog.wzjs010.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>项目快速开发技巧</title>
    <link href="https://blog.wzjs010.cc/2017/07/14/%E9%A1%B9%E7%9B%AE%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    <id>https://blog.wzjs010.cc/2017/07/14/项目快速开发技巧/</id>
    <published>2017-07-14T00:51:33.000Z</published>
    <updated>2018-12-04T08:26:41.002Z</updated>
    
    <content type="html"><![CDATA[<ol><li>业务流程</li><li>功能模块</li><li>处理次序</li></ol><p>例子：<br>团购订单自动超时退款流程 </p><ol><li>获取当前超时团购单，获取已付款超时订单</li><li>设置超时订单状态</li><li>自动退款，退款完成改退款状态</li></ol>]]></content>
    
    <summary type="html">
    
      快速开发
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="php" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/php/"/>
    
    
      <category term="快速开发" scheme="https://blog.wzjs010.cc/tags/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>云知梦Laravel笔记</title>
    <link href="https://blog.wzjs010.cc/2017/07/03/%E4%BA%91%E7%9F%A5%E6%A2%A6Laravel%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.wzjs010.cc/2017/07/03/云知梦Laravel笔记/</id>
    <published>2017-07-03T14:41:53.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Composer安装 <ul><li>getcomposer  安装composer </li><li>composer init  </li><li>composer install</li></ul></li><li>Laravel 安装<ul><li>composer global require “laravel/install”</li><li>github下载</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      笔记
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="php" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/php/"/>
    
    
      <category term="laravel" scheme="https://blog.wzjs010.cc/tags/laravel/"/>
    
      <category term="笔记" scheme="https://blog.wzjs010.cc/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>最近的计划</title>
    <link href="https://blog.wzjs010.cc/2017/07/01/%E6%9C%80%E8%BF%91%E7%9A%84%E8%AE%A1%E5%88%92/"/>
    <id>https://blog.wzjs010.cc/2017/07/01/最近的计划/</id>
    <published>2017-06-30T18:11:09.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>时间是宝贵的东西 </p></blockquote><h3 id="最近做的事情"><a href="#最近做的事情" class="headerlink" title="最近做的事情"></a>最近做的事情</h3><p>日常工作一直按部就班，没有波浪，平平淡淡。偶尔有所收获，有点小进步，但整体时间规划不好。生活工作比较混乱。希望能够整理下心情。</p><h3 id="计划的事情"><a href="#计划的事情" class="headerlink" title="计划的事情"></a>计划的事情</h3><ol><li>最近计划把做过的项目温习巩固下，学的多，吃不透等于不是自己的，不能够信手拈来。项目做的多了，虽然熟练了，但是还需要精通。</li><li>把用不着的东西转让出去把，其实得到的越少，既是拥有的越多。不必有那么多的烦心事。</li><li>生活中要安排合理，休息工作娱乐休闲要安排得当。</li></ol>]]></content>
    
    <summary type="html">
    
      计划
    
    </summary>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感想" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="计划" scheme="https://blog.wzjs010.cc/tags/%E8%AE%A1%E5%88%92/"/>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>项目开发步骤和习惯</title>
    <link href="https://blog.wzjs010.cc/2017/06/09/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%AD%A5%E9%AA%A4%E5%92%8C%E4%B9%A0%E6%83%AF/"/>
    <id>https://blog.wzjs010.cc/2017/06/09/项目开发步骤和习惯/</id>
    <published>2017-06-09T01:46:59.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在软件开发、程序设计中，我们会遇到各种阻碍开发进度和效率、速度的坑，如何能够优雅、快速的开发软件，享受编程的快乐，对于入行不久的程序员确实有点困难。拿自己编写程序的经历简单<br>的记录一下如何能够<strong>快速、优雅</strong>、兴致的开发软件，避免越干越没劲。</p><h3 id="开发中不好的习惯"><a href="#开发中不好的习惯" class="headerlink" title="开发中不好的习惯"></a>开发中不好的习惯</h3><ul><li>一个项目中代码风格不一致</li><li>项目中变量、方法等命名不规范</li><li>代码组织混乱、结构不清晰，未对代码进行重用</li><li>遇到难的问题不解决不罢休、浪费宝贵工作时间</li></ul><a id="more"></a>  <h3 id="开发中遇到问题的解决办法"><a href="#开发中遇到问题的解决办法" class="headerlink" title="开发中遇到问题的解决办法"></a>开发中遇到问题的解决办法</h3><ol><li>为了加快开发<em> 速度 </em>，在项目结构合理的基础上可以<strong> 先实现leader要求</strong> 的基础功能，并记录下可以扩充的复杂功能，在基础功能没有问题后再进行逐步完善，这样可以提高开发速度。 </li><li>对于遇到问题能够短时间解决尽快通过查资料解决；对于不是十分重要但十分难过的坎儿，比较难的问题，先跳过并记录下来，然后利用闲暇时间例如晚上着重解决并最好作技术记录，作为技术积累。</li></ol><h3 id="高效开发的良好习惯"><a href="#高效开发的良好习惯" class="headerlink" title="高效开发的良好习惯"></a>高效开发的良好习惯</h3><ul><li>遵循psr通用风格</li><li>良好的设计模式</li><li>项目目录、代码结构合理组织</li><li>善用接口和继承</li><li>善于代码重用</li><li>更小更精细单一的功能细分、一个控制器、一个函数、一个方法最一件事情。</li></ul>]]></content>
    
    <summary type="html">
    
      项目开发习惯
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="项目开发" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="项目开发" scheme="https://blog.wzjs010.cc/tags/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
      <category term="习惯" scheme="https://blog.wzjs010.cc/tags/%E4%B9%A0%E6%83%AF/"/>
    
      <category term="步骤" scheme="https://blog.wzjs010.cc/tags/%E6%AD%A5%E9%AA%A4/"/>
    
  </entry>
  
  <entry>
    <title>各浏览器跨域解决方案</title>
    <link href="https://blog.wzjs010.cc/2017/06/01/%E5%90%84%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://blog.wzjs010.cc/2017/06/01/各浏览器跨域解决方案/</id>
    <published>2017-06-01T07:22:10.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="前端" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="跨域" scheme="https://blog.wzjs010.cc/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>好的编程习惯</title>
    <link href="https://blog.wzjs010.cc/2017/05/15/%E5%A5%BD%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A0%E6%83%AF/"/>
    <id>https://blog.wzjs010.cc/2017/05/15/好的编程习惯/</id>
    <published>2017-05-15T07:43:33.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<ul><li>接口</li><li>纯类、纯方法（函数）</li><li>尽量不要改原有在你代码，除非是修改BUG，添加的功能尽量用新的方法。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;接口&lt;/li&gt;
&lt;li&gt;纯类、纯方法（函数）&lt;/li&gt;
&lt;li&gt;尽量不要改原有在你代码，除非是修改BUG，添加的功能尽量用新的方法。&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="项目开发" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="编程习惯" scheme="https://blog.wzjs010.cc/tags/%E7%BC%96%E7%A8%8B%E4%B9%A0%E6%83%AF/"/>
    
  </entry>
  
  <entry>
    <title>NodeJs框架基础</title>
    <link href="https://blog.wzjs010.cc/2017/05/13/NodeJs%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80/"/>
    <id>https://blog.wzjs010.cc/2017/05/13/NodeJs框架基础/</id>
    <published>2017-05-13T07:27:33.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows命令行"><a href="#Windows命令行" class="headerlink" title="Windows命令行"></a>Windows命令行</h2><ul><li>cmd</li><li>cls</li><li>exit</li><li>mkdir</li><li>dir</li><li>rmdir</li><li>ipconfig</li><li>ping</li><li>start</li><li>tasklist</li><li>taskkill /f /im explorer.exe</li><li>cd</li><li>netstat -ano     netstat -ano |find ‘445’</li></ul><h2 id="Sublime-Nodejs插件"><a href="#Sublime-Nodejs插件" class="headerlink" title="Sublime Nodejs插件"></a>Sublime Nodejs插件</h2><ul><li><p>新建编译系统 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;cmd&quot;: [&quot;node&quot;,&quot;$file&quot;],</span><br><span class="line">  &quot;selector&quot;:&quot;source.js&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Nodejs</p></li><li>Javascript &amp; NodeJs Snippets</li></ul><h2 id="Npm使用"><a href="#Npm使用" class="headerlink" title="Npm使用"></a>Npm使用</h2><ol><li>npm list 查看本地模块</li><li>npm install  或npm i 安装npm模块 </li><li>npm uninstall 卸载npm模块</li><li>npm root 本地npm模块</li><li>npm update 升级指定模块  </li></ol><p>命令中加-g 代表全局</p><a id="more"></a><h2 id="Node中的事件驱动"><a href="#Node中的事件驱动" class="headerlink" title="Node中的事件驱动"></a>Node中的事件驱动</h2><h2 id="Node模块"><a href="#Node模块" class="headerlink" title="Node模块"></a>Node模块</h2><p>自定义模块<br>module.export=new show()</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>常用函数</li><li>匿名函数</li></ul><h2 id="Node路由"><a href="#Node路由" class="headerlink" title="Node路由"></a>Node路由</h2><p>GET/Post ,index.js 负责加载不同的界面，一个入口，分配不同的页面上去。</p><h2 id="Nodejs全局对象"><a href="#Nodejs全局对象" class="headerlink" title="Nodejs全局对象"></a>Nodejs全局对象</h2><ul><li>__filename</li><li>__dirname</li><li>console.log() info() warn() error() time() timeEnd()</li><li><p>process()<br>process.version<br>process.argv<br>process.pid<br>process.title<br>process.plateform<br>process.cwd()<br>process.memoryUsage()<br>process.uptime()<br>process.stout()</p></li><li><p>setTimeout() 超时器</p></li><li>setInterval() 定时器</li></ul><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><h2 id="常用工具模块"><a href="#常用工具模块" class="headerlink" title="常用工具模块"></a>常用工具模块</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Windows命令行&quot;&gt;&lt;a href=&quot;#Windows命令行&quot; class=&quot;headerlink&quot; title=&quot;Windows命令行&quot;&gt;&lt;/a&gt;Windows命令行&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;cmd&lt;/li&gt;
&lt;li&gt;cls&lt;/li&gt;
&lt;li&gt;exit&lt;/li&gt;
&lt;li&gt;mkdir&lt;/li&gt;
&lt;li&gt;dir&lt;/li&gt;
&lt;li&gt;rmdir&lt;/li&gt;
&lt;li&gt;ipconfig&lt;/li&gt;
&lt;li&gt;ping&lt;/li&gt;
&lt;li&gt;start&lt;/li&gt;
&lt;li&gt;tasklist&lt;/li&gt;
&lt;li&gt;taskkill /f /im explorer.exe&lt;/li&gt;
&lt;li&gt;cd&lt;/li&gt;
&lt;li&gt;netstat -ano     netstat -ano |find ‘445’&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Sublime-Nodejs插件&quot;&gt;&lt;a href=&quot;#Sublime-Nodejs插件&quot; class=&quot;headerlink&quot; title=&quot;Sublime Nodejs插件&quot;&gt;&lt;/a&gt;Sublime Nodejs插件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;新建编译系统 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;cmd&amp;quot;: [&amp;quot;node&amp;quot;,&amp;quot;$file&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;selector&amp;quot;:&amp;quot;source.js&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Nodejs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Javascript &amp;amp; NodeJs Snippets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Npm使用&quot;&gt;&lt;a href=&quot;#Npm使用&quot; class=&quot;headerlink&quot; title=&quot;Npm使用&quot;&gt;&lt;/a&gt;Npm使用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;npm list 查看本地模块&lt;/li&gt;
&lt;li&gt;npm install  或npm i 安装npm模块 &lt;/li&gt;
&lt;li&gt;npm uninstall 卸载npm模块&lt;/li&gt;
&lt;li&gt;npm root 本地npm模块&lt;/li&gt;
&lt;li&gt;npm update 升级指定模块  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;命令中加-g 代表全局&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="NodeJs" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/NodeJs/"/>
    
    
      <category term="NodeJs" scheme="https://blog.wzjs010.cc/tags/NodeJs/"/>
    
  </entry>
  
  <entry>
    <title>Sublime常用插件整理</title>
    <link href="https://blog.wzjs010.cc/2017/05/13/Sublime%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/"/>
    <id>https://blog.wzjs010.cc/2017/05/13/Sublime常用插件整理/</id>
    <published>2017-05-13T03:21:40.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><blockquote><p>Sublime Text 是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。<br>Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。  </p></blockquote><h2 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h2><ol><li>安装Package Control<br>按Ctrl+`调出console<br>粘贴安装代码（见扩展阅读）到底部命令行并回车：<br>重启Sublime Text 2。<br>如果在Perferences-&gt;package settings中看到package control这一项，则安装成功。<br>可以到官网链接（见扩展阅读）下载Package Control.sublime-package放到sublime安装目录里的data里installed package文件夹（这个文件夹位置可能会不一样）</li><li>用Package Control安装其他插件<br>按下Ctrl+Shift+P调出命令面板<br>输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。</li></ol><a id="more"></a>  <h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul><li>CTags</li><li>MarkdownEditing</li><li>Markdown Preview </li><li>Terminal</li><li>FTPSync</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;功能特性&quot;&gt;&lt;a href=&quot;#功能特性&quot; class=&quot;headerlink&quot; title=&quot;功能特性&quot;&gt;&lt;/a&gt;功能特性&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Sublime Text 是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。&lt;br&gt;Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;插件管理&quot;&gt;&lt;a href=&quot;#插件管理&quot; class=&quot;headerlink&quot; title=&quot;插件管理&quot;&gt;&lt;/a&gt;插件管理&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装Package Control&lt;br&gt;按Ctrl+`调出console&lt;br&gt;粘贴安装代码（见扩展阅读）到底部命令行并回车：&lt;br&gt;重启Sublime Text 2。&lt;br&gt;如果在Perferences-&amp;gt;package settings中看到package control这一项，则安装成功。&lt;br&gt;可以到官网链接（见扩展阅读）下载Package Control.sublime-package放到sublime安装目录里的data里installed package文件夹（这个文件夹位置可能会不一样）&lt;/li&gt;
&lt;li&gt;用Package Control安装其他插件&lt;br&gt;按下Ctrl+Shift+P调出命令面板&lt;br&gt;输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="常用软件" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="Sublime" scheme="https://blog.wzjs010.cc/tags/Sublime/"/>
    
      <category term="插件" scheme="https://blog.wzjs010.cc/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Golang学习笔记</title>
    <link href="https://blog.wzjs010.cc/2017/05/11/Golang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.wzjs010.cc/2017/05/11/Golang学习笔记/</id>
    <published>2017-05-11T07:20:16.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://wiki.jikexueyuan.com/project/go-web-programming/" target="_blank" rel="noopener">Go Web 编程-极客学院Wiki</a><br>下面是读这本书的笔记 </p><h2 id="go环境配置"><a href="#go环境配置" class="headerlink" title="go环境配置"></a>go环境配置</h2><ol><li>Go安装<br>三种安装方式，源码安装、压缩包安装 </li><li>GOPATH和工作空间<br>作用？工作空间的目录结构</li><li><p>GO命令</p><ol><li>go build<ul><li>如果是普通包，就像我们在1.2节中编写的mymath包那样，当你执行go build之后，它不会产生任何文件。如果你需要在$GOPATH/pkg下生成相应的文件，那就得执行go install。</li><li>如果是main包，当你执行go build之后，它就会在当前目录下生成一个可执行文件。如果你需要在$GOPATH/bin下生成相应的文件，需要执行go install，或者使用go build -o 路径/a.exe。</li><li>你也可以指定编译输出的文件名。例如1.2节中的mathapp应用，我们可以指定go build -o astaxie.exe，默认情况是你的package名(非main包)，或者是第一个源文件的文件名(main包)。<br>（注：实际上，package名在Go语言规范中指代码中“package”后使用的名称，此名称可以与文件夹名不同。默认生成的可执行文件名是文件夹名。） </li><li>go build会忽略目录下以“_”或“.”开头的go文件。</li><li>如果你的源代码针对不同的操作系统需要不同的处理，那么你可以根据不同的操作系统后缀来命名文件。例如有一个读取数组的程序，它对于不同的操作系统可能有如下几个源文件：<br><code>array_linux.go array_darwin.go array_windows.go array_freebsd.go</code><br>go build的时候会选择性地编译以系统名结尾的文件（Linux、Darwin、Windows、Freebsd）。例如Linux系统下面编译只会选择array_linux.go文件，其它系统命名后缀文件全部忽略。<br>参数的介绍<ul><li><code>-o</code> 指定输出的文件名，可以带上路径，例如 <code>go build -o a/b/c</code></li><li><code>-i</code> 安装相应的包，编译+<code>go install</code></li><li><code>-a</code> 更新全部已经是最新的包的，但是对标准包不适用</li><li><code>-n</code> 把需要执行的编译命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的</li><li><code>-p n</code> 指定可以并行可运行的编译数目，默认是CPU数目</li><li><code>-race</code> 开启编译的时候自动检测数据竞争的情况，目前只支持64位的机器</li><li><code>-v</code> 打印出来我们正在编译的包名</li><li><code>-work</code> 打印出来编译时候的临时文件夹名称，并且如果已经存在的话就不要删除</li><li><code>-x</code> 打印出来执行的命令，其实就是和<code>-n</code>的结果类似，只是这个会执行</li><li><code>-ccflags &#39;arg list&#39;</code> 传递参数给5c, 6c, 8c 调用</li><li><code>-compiler name</code> 指定相应的编译器，gccgo还是gc</li><li><code>-gccgoflags &#39;arg list&#39;</code> 传递参数给gccgo编译连接调用</li><li><code>-gcflags &#39;arg list&#39;</code> 传递参数给5g, 6g, 8g 调用</li><li><code>-installsuffix suffix</code> 为了和默认的安装包区别开来，采用这个前缀来重新安装那些依赖的包，<code>-race</code>的时候默认已经是<code>-installsuffix race</code>,大家可以通过<code>-n</code>命令来验证</li><li><code>-ldflags &#39;flag list&#39;</code> 传递参数给5l, 6l, 8l 调用</li><li><code>-tags &#39;tag list&#39;</code> 设置在编译的时候可以适配的那些tag，详细的tag限制参考里面的 <a href="http://golang.org/pkg/go/build/" target="_blank" rel="noopener">Build Constraints</a>  </li></ul></li></ul></li><li>go clean  这个命令是用来移除当前源码包和关联源码包里面编译生成的文件。</li><li>go fmt 代码格式化<br>用go fmt命令，其实是调用了gofmt，而且需要参数-w，否则格式化结果不会写入文件。gofmt -w -l src，可以格式化整个项目。<br>所以go fmt是gofmt的上层一个包装的命令，我们想要更多的个性化的格式化可以参考 gofmt<br>gofmt的参数介绍<ul><li>-l 显示那些需要格式化的文件</li></ul></li></ol><ul><li>-w 把改写后的内容直接写入到文件中，而不是作为结果打印到标准输出。</li><li>-r 添加形如“a[b:len(a)] -&gt; a[b:]”的重写规则，方便我们做批量替换</li><li>-s 简化文件中的代码</li><li>-d 显示格式化前后的diff而不是写入文件，默认是false</li><li>-e 打印所有的语法错误到标准输出。如果不使用此标记，则只会打印不同行的前10个错误。</li><li>-cpuprofile 支持调试模式，写入相应的cpufile到指定的文件</li></ul><ol start="4"><li>go get 这个命令是用来动态获取远程代码包的<br>这个命令在内部实际上分成了两步操作：第一步是下载源码包，第二步是执行go install。下载源码包的go工具会自动根据不同的域名调用不同的源码工具，<br>参数 -d 之只下载不安装</li><li>go install 这个命令在内部实际上分成了两步操作：第一步是生成结果文件(可执行文件或者.a包)，第二步会把编译好的结果移到$GOPATH/pkg或者$GOPATH/bin。</li><li>go test  执行这个命令，会自动读取源码目录下面名为*_test.go的文件，生成并运行测试用的可执行文件。</li><li>go tool  下面下载聚集了很多命令</li><li>go generate   这个命令是从Go1.4开始才设计的，用于在编译前自动化生成某类代码。</li><li>godoc  在Go1.2版本之前还支持go doc命令，但是之后全部已到了godoc这个命令下，需要这样安装go get </li><li><blockquote><p>go version 查看go当前的版本<br>go env 查看当前go的环境变量<br>go list 列出当前全部安装的package<br>go run 编译并运行Go程序  </p></blockquote></li></ol></li><li><p>开发工具</p><ul><li>Sublime Text</li><li>PHPStorm </li><li>LiteIDE</li></ul></li></ol><a id="more"></a>  <h2 id="Go语言基础"><a href="#Go语言基础" class="headerlink" title="Go语言基础"></a>Go语言基础</h2><blockquote><p>Go使用package（和Python的模块类似）来组织代码。main.main()函数(这个函数位于主包）是每一个独立的可运行程序的入口点。Go使用UTF-8字符串和标识符(因为UTF-8的发明者也就是Go的发明者)，所以它天生支持多语言。  </p></blockquote><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><ol><li>定义变量<br>定义一个名称为“variableName”，类型为”type”的变量   <code>var variableName type</code><br>定义三个类型都是“type”的变量<code>var vname1, vname2, vname3 type</code><br>初始化“variableName”的变量为“value”值，类型是“type” <code>var variableName type = value</code><br>定义三个类型都是”type”的变量,并且分别初始化为相应的值    vname1为v1，vname2为v2，vname3为v3  <code>var vname1, vname2, vname3 type= v1, v2, v3</code><br>定义三个变量，它们分别初始化为相应的值   vname1为v1，vname2为v2，vname3为v3   编译器会根据初始化的值自动推导出相应的类型 <code>vname1, vname2, vname3 := v1, v2, v3</code><h3 id="流程和函数"><a href="#流程和函数" class="headerlink" title="流程和函数"></a>流程和函数</h3><h4 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h4></li></ol><ul><li><p><code>if</code> Go里面if条件判断语句中不需要括号，如下代码所示</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x &gt; <span class="number">10</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"x is greater than 10"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"x is less than 10"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>goto</code> 用goto跳转到必须在当前函数内定义的标签。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">myFunc</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i := <span class="number">0</span></span><br><span class="line">Here:   <span class="comment">//这行的第一个词，以冒号结束作为标签</span></span><br><span class="line">    <span class="built_in">println</span>(i)</span><br><span class="line">    i++</span><br><span class="line">    <span class="keyword">goto</span> Here   <span class="comment">//跳转到Here去</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>for</code> Go里面最强大的一个控制逻辑就是for，它即可以用来循环读取数据，又可以当作while来控制逻辑，还能迭代操作。它的语法如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> expression1; expression2; expression3 &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>expression1、expression2和expression3都是表达式，其中expression1和expression3是变量声明或者函数调用返回值之类的，expression2是用来条件判断，expression1在循环开始之前调用，expression3在每轮循环结束之时调用。<br>通常用法<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sum := <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> index:=<span class="number">0</span>; index &lt; <span class="number">10</span> ; index++ &#123;</span><br><span class="line">        sum += index</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(<span class="string">"sum is equal to "</span>, sum)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出：sum is equal to 45</span></span><br></pre></td></tr></table></figure></p><p>循环<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum := <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> ; sum &lt; <span class="number">1000</span>;  &#123;</span><br><span class="line">    sum += sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>简写<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum := <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> sum &lt; <span class="number">1000</span> &#123;</span><br><span class="line">    sum += sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>for 中有break 、continue<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index := <span class="number">10</span>; index&gt;<span class="number">0</span>; index-- &#123;</span><br><span class="line">    <span class="keyword">if</span> index == <span class="number">5</span>&#123;</span><br><span class="line">        <span class="keyword">break</span> <span class="comment">// 或者continue</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(index)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// break打印出来10、9、8、7、6</span></span><br><span class="line"><span class="comment">// continue打印出来10、9、8、7、6、4、3、2、1</span></span><br></pre></td></tr></table></figure></p><p>for配合range可以用于读取slice和map的数据：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> k,v:=<span class="keyword">range</span> <span class="keyword">map</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"map's key:"</span>,k)</span><br><span class="line">    fmt.Println(<span class="string">"map's val:"</span>,v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>由于 Go 支持 “多值返回”, 而对于“声明而未被调用”的变量, 编译器会报错, 在这种情况下, 可以使用_来丢弃不需要的返回值 例如<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> <span class="keyword">map</span>&#123;</span><br><span class="line">    fmt.Println(<span class="string">"map's val:"</span>, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><code>switch</code> if 不够用使用switch <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> sExpr &#123;</span><br><span class="line"><span class="keyword">case</span> expr1:</span><br><span class="line">    some instructions</span><br><span class="line"><span class="keyword">case</span> expr2:</span><br><span class="line">    some other instructions</span><br><span class="line"><span class="keyword">case</span> expr3:</span><br><span class="line">    some other instructions</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    other code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>another<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">integer := <span class="number">6</span></span><br><span class="line"><span class="keyword">switch</span> integer &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    fmt.Println(<span class="string">"The integer was &lt;= 4"</span>)</span><br><span class="line">    <span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    fmt.Println(<span class="string">"The integer was &lt;= 5"</span>)</span><br><span class="line">    <span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    fmt.Println(<span class="string">"The integer was &lt;= 6"</span>)</span><br><span class="line">    <span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    fmt.Println(<span class="string">"The integer was &lt;= 7"</span>)</span><br><span class="line">    <span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">    fmt.Println(<span class="string">"The integer was &lt;= 8"</span>)</span><br><span class="line">    <span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    fmt.Println(<span class="string">"default case"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>函数是Go里面的核心设计，它通过关键字func来声明，它的格式如下：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcName</span><span class="params">(input1 type1, input2 type2)</span> <span class="params">(output1 type1, output2 type2)</span></span> &#123;</span><br><span class="line">    <span class="comment">//这里是处理逻辑代码</span></span><br><span class="line">    <span class="comment">//返回多个值</span></span><br><span class="line">    <span class="keyword">return</span> value1, value2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>关键字func用来声明一个函数funcName<br>函数可以有一个或者多个参数，每个参数后面带有类型，通过,分隔<br>函数可以返回多个值<br>上面返回值声明了两个变量output1和output2，如果你不想声明也可以，直接就两个类型<br>如果只有一个返回值且不声明返回值变量，那么你可以省略 包括返回值 的括号<br>如果没有返回值，那么就直接省略最后的返回信息<br>如果有返回值， 那么必须在函数的外层添加return语句<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回a、b中最大值.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    x := <span class="number">3</span></span><br><span class="line">    y := <span class="number">4</span></span><br><span class="line">    z := <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    max_xy := max(x, y) <span class="comment">//调用函数max(x, y)</span></span><br><span class="line">    max_xz := max(x, z) <span class="comment">//调用函数max(x, z)</span></span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">"max(%d, %d) = %d\n"</span>, x, y, max_xy)</span><br><span class="line">    fmt.Printf(<span class="string">"max(%d, %d) = %d\n"</span>, x, z, max_xz)</span><br><span class="line">    fmt.Printf(<span class="string">"max(%d, %d) = %d\n"</span>, y, z, max(y,z)) <span class="comment">// 也可在这直接调用它</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多个返回值<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回 A+B 和 A*B</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SumAndProduct</span><span class="params">(A, B <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> A+B, A*B</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    x := <span class="number">3</span></span><br><span class="line">    y := <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    xPLUSy, xTIMESy := SumAndProduct(x, y)</span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">"%d + %d = %d\n"</span>, x, y, xPLUSy)</span><br><span class="line">    fmt.Printf(<span class="string">"%d * %d = %d\n"</span>, x, y, xTIMESy)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>变参  func myfunc(arg …int) {}<br>传值与传指针</p><blockquote><p>当我们传一个参数值到被调用函数里面时，实际上是传了这个值的一份copy，当在被调用函数中修改参数值的时候，调用函数中相应实参不会发生任何变化，因为数值变化只作用在copy上。<br>传指针使得多个函数能操作同一个对象。<br>传指针比较轻量级 (8bytes),只是传内存地址，我们可以用指针传递体积大的结构体。如果用参数值传递的话, 在每次copy上面就会花费相对较多的系统开销（内存和时间）。所以当你要传递大的结构体的时候，用指针是一个明智的选择。<br>Go语言中channel，slice，map这三种类型的实现机制类似指针，所以可以直接传递，而不用取地址后传递指针。（注：若函数需改变slice的长度，则仍需要取地址传递指针）</p></blockquote><p>defer<br>Panic和Recover</p><h3 id="struct类型"><a href="#struct类型" class="headerlink" title="struct类型"></a>struct类型</h3><blockquote><p>Go语言中，也和C或者其他语言一样，我们可以声明新的类型，作为其它类型的属性或字段的容器。例如，我们可以创建一个自定义类型person代表一个人的实体。这个实体拥有属性：姓名和年龄。这样的类型我们称之struct。如下代码所示:<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">    name <span class="keyword">string</span></span><br><span class="line">    age <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">    name <span class="keyword">string</span></span><br><span class="line">    age <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> P person  <span class="comment">// P现在就是person类型的变量了</span></span><br><span class="line"></span><br><span class="line">P.name = <span class="string">"Astaxie"</span>  <span class="comment">// 赋值"Astaxie"给P的name属性.</span></span><br><span class="line">P.age = <span class="number">25</span>  <span class="comment">// 赋值"25"给变量P的age属性</span></span><br><span class="line">fmt.Printf(<span class="string">"The person's name is %s"</span>, P.name)  <span class="comment">// 访问P的name属性.</span></span><br></pre></td></tr></table></figure></p></blockquote><p>除了上面这种P的声明使用之外，还有另外几种声明使用方式：</p><ul><li>1.按照顺序提供初始化值<br>  P := person{“Tom”, 25}</li><li>2.通过<code>field:value</code>的方式初始化，这样可以任意顺序<br>  P := person{age:24, name:”Tom”}</li><li>3.当然也可以通过<code>new</code>函数分配一个指针，此处P的类型为*person<br>  P := new(person)</li></ul><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p><code>带有接收者的函数，我们称为method</code><br>计算面积的例子<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原始的函数</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Rectangle <span class="keyword">struct</span> &#123;</span><br><span class="line">    width, height <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">area</span><span class="params">(r Rectangle)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> r.width*r.height</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r1 := Rectangle&#123;<span class="number">12</span>, <span class="number">2</span>&#125;</span><br><span class="line">    r2 := Rectangle&#123;<span class="number">9</span>, <span class="number">4</span>&#125;</span><br><span class="line">    fmt.Println(<span class="string">"Area of r1 is: "</span>, area(r1))</span><br><span class="line">    fmt.Println(<span class="string">"Area of r2 is: "</span>, area(r2))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受者</span></span><br><span class="line"><span class="keyword">type</span> Rectangle <span class="keyword">struct</span> &#123;</span><br><span class="line">    width, height <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Circle <span class="keyword">struct</span> &#123;</span><br><span class="line">    radius <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r Rectangle)</span> <span class="title">area</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> r.width*r.height</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Circle)</span> <span class="title">area</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> c.radius * c.radius * math.Pi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r1 := Rectangle&#123;<span class="number">12</span>, <span class="number">2</span>&#125;</span><br><span class="line">    r2 := Rectangle&#123;<span class="number">9</span>, <span class="number">4</span>&#125;</span><br><span class="line">    c1 := Circle&#123;<span class="number">10</span>&#125;</span><br><span class="line">    c2 := Circle&#123;<span class="number">25</span>&#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">"Area of r1 is: "</span>, r1.area())</span><br><span class="line">    fmt.Println(<span class="string">"Area of r2 is: "</span>, r2.area())</span><br><span class="line">    fmt.Println(<span class="string">"Area of c1 is: "</span>, c1.area())</span><br><span class="line">    fmt.Println(<span class="string">"Area of c2 is: "</span>, c2.area())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>method继承<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Human <span class="keyword">struct</span> &#123;</span><br><span class="line">    name <span class="keyword">string</span></span><br><span class="line">    age <span class="keyword">int</span></span><br><span class="line">    phone <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">    Human <span class="comment">//匿名字段</span></span><br><span class="line">    school <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Employee <span class="keyword">struct</span> &#123;</span><br><span class="line">    Human <span class="comment">//匿名字段</span></span><br><span class="line">    company <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在human上面定义了一个method</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Human)</span> <span class="title">SayHi</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"Hi, I am %s you can call me on %s\n"</span>, h.name, h.phone)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    mark := Student&#123;Human&#123;<span class="string">"Mark"</span>, <span class="number">25</span>, <span class="string">"222-222-YYYY"</span>&#125;, <span class="string">"MIT"</span>&#125;</span><br><span class="line">    sam := Employee&#123;Human&#123;<span class="string">"Sam"</span>, <span class="number">45</span>, <span class="string">"111-888-XXXX"</span>&#125;, <span class="string">"Golang Inc"</span>&#125;</span><br><span class="line"></span><br><span class="line">    mark.SayHi()</span><br><span class="line">    sam.SayHi()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="interface"><a href="#interface" class="headerlink" title="interface"></a>interface</h3><blockquote><p>Go语言里面设计最精妙的应该算interface，它让面向对象，内容组织实现非常的方便<br>简单的说，interface是一组method的组合，我们通过interface来定义对象的一组行为。  </p></blockquote><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><ul><li><p>goroutine<br> goroutine是通过Go的runtime管理的一个线程管理器。goroutine通过go关键字实现了，其实就是一个普通的函数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"runtime"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">say</span><span class="params">(s <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">        runtime.Gosched()</span><br><span class="line">        fmt.Println(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">go</span> say(<span class="string">"world"</span>) <span class="comment">//开一个新的Goroutines执行</span></span><br><span class="line">    say(<span class="string">"hello"</span>) <span class="comment">//当前Goroutines执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>runtime.Gosched()表示让CPU把时间片让给别人,下次某个时候继续恢复执行该goroutine</p></li><li><p>channels  </p><blockquote><p>goroutine运行在相同的地址空间，因此访问共享内存必须做好同步。那么goroutine之间如何进行数据的通信呢，Go提供了一个很好的通信机制channel。channel可以与Unix shell 中的双向管道做类比：可以通过它发送或者接收值。这些值只能是特定的类型：channel类型。定义一个channel时，也需要定义发送到channel的值的类型。注意，必须使用make 创建channel： </p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ci := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">cs := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</span><br><span class="line">cf := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"><span class="comment">//channel通过操作符&lt;-来接收和发送数据</span></span><br><span class="line">ch &lt;- v    <span class="comment">// 发送v到channel ch.</span></span><br><span class="line">v := &lt;-ch  <span class="comment">// 从ch中接收数据，并赋值给v</span></span><br></pre></td></tr></table></figure></li></ul><p>channel例子<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(a []<span class="keyword">int</span>, c <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    total := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> a &#123;</span><br><span class="line">        total += v</span><br><span class="line">    &#125;</span><br><span class="line">    c &lt;- total  <span class="comment">// send total to c</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := []<span class="keyword">int</span>&#123;<span class="number">7</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">-9</span>, <span class="number">4</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">    c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">    <span class="keyword">go</span> sum(a[:<span class="built_in">len</span>(a)/<span class="number">2</span>], c)</span><br><span class="line">    <span class="keyword">go</span> sum(a[<span class="built_in">len</span>(a)/<span class="number">2</span>:], c)</span><br><span class="line">    x, y := &lt;-c, &lt;-c  <span class="comment">// receive from c</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(x, y, x + y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Buffered Channels<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">2</span>)<span class="comment">//修改2为1就报错，修改2为3可以正常运行</span></span><br><span class="line">    c &lt;- <span class="number">1</span></span><br><span class="line">    c &lt;- <span class="number">2</span></span><br><span class="line">    fmt.Println(&lt;-c)</span><br><span class="line">    fmt.Println(&lt;-c)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//修改为1报如下的错误:</span></span><br><span class="line">    <span class="comment">//fatal error: all goroutines are asleep - deadlock!</span></span><br></pre></td></tr></table></figure></p><h2 id="web基础"><a href="#web基础" class="headerlink" title="web基础"></a>web基础</h2><ul><li>web工作原理</li><li>http包建立Web服务器<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"strings"</span></span><br><span class="line">    <span class="string">"log"</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sayhelloName</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    r.ParseForm()  <span class="comment">//解析参数，默认是不会解析的</span></span><br><span class="line">    fmt.Println(r.Form)  <span class="comment">//这些信息是输出到服务器端的打印信息</span></span><br><span class="line">    fmt.Println(<span class="string">"path"</span>, r.URL.Path)</span><br><span class="line">    fmt.Println(<span class="string">"scheme"</span>, r.URL.Scheme)</span><br><span class="line">    fmt.Println(r.Form[<span class="string">"url_long"</span>])</span><br><span class="line">    <span class="keyword">for</span> k, v := <span class="keyword">range</span> r.Form &#123;</span><br><span class="line">        fmt.Println(<span class="string">"key:"</span>, k)</span><br><span class="line">        fmt.Println(<span class="string">"val:"</span>, strings.Join(v, <span class="string">""</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Fprintf(w, <span class="string">"Hello astaxie!"</span>) <span class="comment">//这个写入到w的是输出到客户端的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">"/"</span>, sayhelloName) <span class="comment">//设置访问的路由</span></span><br><span class="line">    err := http.ListenAndServe(<span class="string">":9090"</span>, <span class="literal">nil</span>) <span class="comment">//设置监听的端口</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(<span class="string">"ListenAndServe: "</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/go-web-programming/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go Web 编程-极客学院Wiki&lt;/a&gt;&lt;br&gt;下面是读这本书的笔记 &lt;/p&gt;
&lt;h2 id=&quot;go环境配置&quot;&gt;&lt;a href=&quot;#go环境配置&quot; class=&quot;headerlink&quot; title=&quot;go环境配置&quot;&gt;&lt;/a&gt;go环境配置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Go安装&lt;br&gt;三种安装方式，源码安装、压缩包安装 &lt;/li&gt;
&lt;li&gt;GOPATH和工作空间&lt;br&gt;作用？工作空间的目录结构&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GO命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;go build&lt;ul&gt;
&lt;li&gt;如果是普通包，就像我们在1.2节中编写的mymath包那样，当你执行go build之后，它不会产生任何文件。如果你需要在$GOPATH/pkg下生成相应的文件，那就得执行go install。&lt;/li&gt;
&lt;li&gt;如果是main包，当你执行go build之后，它就会在当前目录下生成一个可执行文件。如果你需要在$GOPATH/bin下生成相应的文件，需要执行go install，或者使用go build -o 路径/a.exe。&lt;/li&gt;
&lt;li&gt;你也可以指定编译输出的文件名。例如1.2节中的mathapp应用，我们可以指定go build -o astaxie.exe，默认情况是你的package名(非main包)，或者是第一个源文件的文件名(main包)。&lt;br&gt;（注：实际上，package名在Go语言规范中指代码中“package”后使用的名称，此名称可以与文件夹名不同。默认生成的可执行文件名是文件夹名。） &lt;/li&gt;
&lt;li&gt;go build会忽略目录下以“_”或“.”开头的go文件。&lt;/li&gt;
&lt;li&gt;如果你的源代码针对不同的操作系统需要不同的处理，那么你可以根据不同的操作系统后缀来命名文件。例如有一个读取数组的程序，它对于不同的操作系统可能有如下几个源文件：&lt;br&gt;&lt;code&gt;array_linux.go array_darwin.go array_windows.go array_freebsd.go&lt;/code&gt;&lt;br&gt;go build的时候会选择性地编译以系统名结尾的文件（Linux、Darwin、Windows、Freebsd）。例如Linux系统下面编译只会选择array_linux.go文件，其它系统命名后缀文件全部忽略。&lt;br&gt;参数的介绍&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; 指定输出的文件名，可以带上路径，例如 &lt;code&gt;go build -o a/b/c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 安装相应的包，编译+&lt;code&gt;go install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; 更新全部已经是最新的包的，但是对标准包不适用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; 把需要执行的编译命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p n&lt;/code&gt; 指定可以并行可运行的编译数目，默认是CPU数目&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-race&lt;/code&gt; 开启编译的时候自动检测数据竞争的情况，目前只支持64位的机器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; 打印出来我们正在编译的包名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-work&lt;/code&gt; 打印出来编译时候的临时文件夹名称，并且如果已经存在的话就不要删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; 打印出来执行的命令，其实就是和&lt;code&gt;-n&lt;/code&gt;的结果类似，只是这个会执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ccflags &amp;#39;arg list&amp;#39;&lt;/code&gt; 传递参数给5c, 6c, 8c 调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-compiler name&lt;/code&gt; 指定相应的编译器，gccgo还是gc&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gccgoflags &amp;#39;arg list&amp;#39;&lt;/code&gt; 传递参数给gccgo编译连接调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gcflags &amp;#39;arg list&amp;#39;&lt;/code&gt; 传递参数给5g, 6g, 8g 调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-installsuffix suffix&lt;/code&gt; 为了和默认的安装包区别开来，采用这个前缀来重新安装那些依赖的包，&lt;code&gt;-race&lt;/code&gt;的时候默认已经是&lt;code&gt;-installsuffix race&lt;/code&gt;,大家可以通过&lt;code&gt;-n&lt;/code&gt;命令来验证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ldflags &amp;#39;flag list&amp;#39;&lt;/code&gt; 传递参数给5l, 6l, 8l 调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-tags &amp;#39;tag list&amp;#39;&lt;/code&gt; 设置在编译的时候可以适配的那些tag，详细的tag限制参考里面的 &lt;a href=&quot;http://golang.org/pkg/go/build/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Build Constraints&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;go clean  这个命令是用来移除当前源码包和关联源码包里面编译生成的文件。&lt;/li&gt;
&lt;li&gt;go fmt 代码格式化&lt;br&gt;用go fmt命令，其实是调用了gofmt，而且需要参数-w，否则格式化结果不会写入文件。gofmt -w -l src，可以格式化整个项目。&lt;br&gt;所以go fmt是gofmt的上层一个包装的命令，我们想要更多的个性化的格式化可以参考 gofmt&lt;br&gt;gofmt的参数介绍&lt;ul&gt;
&lt;li&gt;-l 显示那些需要格式化的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;-w 把改写后的内容直接写入到文件中，而不是作为结果打印到标准输出。&lt;/li&gt;
&lt;li&gt;-r 添加形如“a[b:len(a)] -&amp;gt; a[b:]”的重写规则，方便我们做批量替换&lt;/li&gt;
&lt;li&gt;-s 简化文件中的代码&lt;/li&gt;
&lt;li&gt;-d 显示格式化前后的diff而不是写入文件，默认是false&lt;/li&gt;
&lt;li&gt;-e 打印所有的语法错误到标准输出。如果不使用此标记，则只会打印不同行的前10个错误。&lt;/li&gt;
&lt;li&gt;-cpuprofile 支持调试模式，写入相应的cpufile到指定的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;go get 这个命令是用来动态获取远程代码包的&lt;br&gt;这个命令在内部实际上分成了两步操作：第一步是下载源码包，第二步是执行go install。下载源码包的go工具会自动根据不同的域名调用不同的源码工具，&lt;br&gt;参数 -d 之只下载不安装&lt;/li&gt;
&lt;li&gt;go install 这个命令在内部实际上分成了两步操作：第一步是生成结果文件(可执行文件或者.a包)，第二步会把编译好的结果移到$GOPATH/pkg或者$GOPATH/bin。&lt;/li&gt;
&lt;li&gt;go test  执行这个命令，会自动读取源码目录下面名为*_test.go的文件，生成并运行测试用的可执行文件。&lt;/li&gt;
&lt;li&gt;go tool  下面下载聚集了很多命令&lt;/li&gt;
&lt;li&gt;go generate   这个命令是从Go1.4开始才设计的，用于在编译前自动化生成某类代码。&lt;/li&gt;
&lt;li&gt;godoc  在Go1.2版本之前还支持go doc命令，但是之后全部已到了godoc这个命令下，需要这样安装go get &lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;go version 查看go当前的版本&lt;br&gt;go env 查看当前go的环境变量&lt;br&gt;go list 列出当前全部安装的package&lt;br&gt;go run 编译并运行Go程序  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开发工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sublime Text&lt;/li&gt;
&lt;li&gt;PHPStorm &lt;/li&gt;
&lt;li&gt;LiteIDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Golang" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
      <category term="Golang" scheme="https://blog.wzjs010.cc/tags/Golang/"/>
    
      <category term="笔记" scheme="https://blog.wzjs010.cc/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Golang开发入门基本知识</title>
    <link href="https://blog.wzjs010.cc/2017/05/11/Golang%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
    <id>https://blog.wzjs010.cc/2017/05/11/Golang开发入门基本知识/</id>
    <published>2017-05-11T06:22:34.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习步骤"><a href="#学习步骤" class="headerlink" title="学习步骤"></a>学习步骤</h2><ol><li>Golang语言结构和语法的学习，参考网络上一些教程，边学边练，将基本知识点掌握。 </li><li>参考Github上一些开源项目，熟悉其项目结构，学习其编程思想，培养好的编程习惯。 </li><li>参与项目练手  </li></ol><h2 id="入门基础资料"><a href="#入门基础资料" class="headerlink" title="入门基础资料"></a>入门基础资料</h2><ol><li><a href="https://github.com/Unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md" target="_blank" rel="noopener">《The Way to Go》中文译本，中文正式名《Go入门指南》 </a> </li><li><a href="http://wiki.jikexueyuan.com/list/go/" target="_blank" rel="noopener">Go 语言入门基础教程_Go 语言开发学习书籍-极客学院Wiki</a> </li><li><a href="https://tour.go-zh.org/" target="_blank" rel="noopener">Go 指南</a> </li><li><a href="http://docscn.studygolang.com/doc/" target="_blank" rel="noopener">文档 - Go 编程语言</a> </li></ol><h3 id="掌握的知识点"><a href="#掌握的知识点" class="headerlink" title="掌握的知识点"></a>掌握的知识点</h3><ol><li>学习Go语言<ol><li>Go语言起源</li><li>安装与运行环境</li><li>集成开发环境和代码编辑器的使用</li></ol></li><li>语言核心结构<ol><li>数据结构和类型，变量、常量、数组切片、map、指针</li><li>流程控制结构语句</li><li>函数</li><li>包结构</li><li>结构和方法</li><li>接口与反射</li></ol></li><li>Go高级编程<ol><li>项目组织结构</li><li>包管理工具</li><li>错误处理</li><li>Web编程</li></ol></li></ol><a id="more"></a>  <h2 id="项目练习"><a href="#项目练习" class="headerlink" title="项目练习"></a>项目练习</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;学习步骤&quot;&gt;&lt;a href=&quot;#学习步骤&quot; class=&quot;headerlink&quot; title=&quot;学习步骤&quot;&gt;&lt;/a&gt;学习步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Golang语言结构和语法的学习，参考网络上一些教程，边学边练，将基本知识点掌握。 &lt;/li&gt;
&lt;li&gt;参考Github上一些开源项目，熟悉其项目结构，学习其编程思想，培养好的编程习惯。 &lt;/li&gt;
&lt;li&gt;参与项目练手  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;入门基础资料&quot;&gt;&lt;a href=&quot;#入门基础资料&quot; class=&quot;headerlink&quot; title=&quot;入门基础资料&quot;&gt;&lt;/a&gt;入门基础资料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《The Way to Go》中文译本，中文正式名《Go入门指南》 &lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/list/go/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go 语言入门基础教程_Go 语言开发学习书籍-极客学院Wiki&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tour.go-zh.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go 指南&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docscn.studygolang.com/doc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档 - Go 编程语言&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;掌握的知识点&quot;&gt;&lt;a href=&quot;#掌握的知识点&quot; class=&quot;headerlink&quot; title=&quot;掌握的知识点&quot;&gt;&lt;/a&gt;掌握的知识点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;学习Go语言&lt;ol&gt;
&lt;li&gt;Go语言起源&lt;/li&gt;
&lt;li&gt;安装与运行环境&lt;/li&gt;
&lt;li&gt;集成开发环境和代码编辑器的使用&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;语言核心结构&lt;ol&gt;
&lt;li&gt;数据结构和类型，变量、常量、数组切片、map、指针&lt;/li&gt;
&lt;li&gt;流程控制结构语句&lt;/li&gt;
&lt;li&gt;函数&lt;/li&gt;
&lt;li&gt;包结构&lt;/li&gt;
&lt;li&gt;结构和方法&lt;/li&gt;
&lt;li&gt;接口与反射&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Go高级编程&lt;ol&gt;
&lt;li&gt;项目组织结构&lt;/li&gt;
&lt;li&gt;包管理工具&lt;/li&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;li&gt;Web编程&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Golang" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
      <category term="Golang" scheme="https://blog.wzjs010.cc/tags/Golang/"/>
    
      <category term="入门" scheme="https://blog.wzjs010.cc/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>常用软件总结</title>
    <link href="https://blog.wzjs010.cc/2017/04/08/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%80%BB%E7%BB%93/"/>
    <id>https://blog.wzjs010.cc/2017/04/08/常用软件总结/</id>
    <published>2017-04-08T07:33:24.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<ul><li style="list-style: none"><input type="checkbox" checked> 简略整理</li><li style="list-style: none"><input type="checkbox"> 详细疏导</li><li style="list-style: none"><input type="checkbox"> 检查纠正</li></ul><p>经常在电脑前面，把常用软件归结一下。 </p><h3 id="优秀的程序代码编辑器"><a href="#优秀的程序代码编辑器" class="headerlink" title="优秀的程序代码编辑器"></a>优秀的程序代码编辑器</h3><p>下列的编辑器功能各有自己的特色，都能够加快开发效率，并且相关的插件都很丰富。是读写代码非常好的工具。大部分都是跨平台的。</p><ul><li><p>Sublime text  </p><blockquote><p> 一款具有<strong>代码高亮、语法提示、自动完成</strong>且反应快速的编辑器软件，不仅具有华丽的界面，还支持插件扩展机制，用她来写代码，绝对是一种享受。相比于难于上手的Vim，浮肿沉重的Eclipse，VS，即便体积轻巧迅速启动的Editplus、Notepad++，在SublimeText面前大略显失色，无疑这款性感无比的编辑器是Coding和Writing最佳的选择，没有之一。  </p></blockquote><p>使用Sublime text 要善用插件，强大的插件可以加快开发效率。常用的插件列下 ：<br>参见：</p><blockquote><p><a href="http://www.sublimetext.com/3" target="_blank" rel="noopener">官网Sublime Text - Download</a><br><a href="http://www.open-open.com/news/view/26d731" target="_blank" rel="noopener">20 个强大的 Sublime Text 插件</a><br><a href="http://jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/" target="_blank" rel="noopener">如何优雅地使用Sublime Text | 晚晴幽草轩</a><br><a href="https://www.zhihu.com/question/24896283" target="_blank" rel="noopener">Sublime Text 有哪些使用技巧？ - 知乎</a></p></blockquote></li><li><p>JetBrains Php Storm &amp;&amp; Pycharm  </p><blockquote><p>JetBrains 公司开发的编辑器都是最好的，方便、智能化。PhpStorm 是最好的PHP开发工具，使用它进行PHP开发将会让你感觉到编程的乐趣。Pycharm是Python最好的的开发工具。同样也有Java的开发工具。<br>官网：<a href="http://www.jetbrains.com/" target="_blank" rel="noopener">JetBrains: Development Tools for Professionals and Teams</a></p></blockquote></li><li><p>Atom  </p><blockquote><p>Atom为GITHub出的一款代码编辑器，也拥有强大的插件。<a href="https://atom.io/" target="_blank" rel="noopener">下载地址</a>  </p></blockquote></li><li><p>Visual Studio Code  </p><blockquote><p>微软出的代码编辑器，<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">官方网站</a>  </p></blockquote></li><li><p><a href="https://www.golangtc.com/download/liteide" target="_blank" rel="noopener">LiteIDE</a>,Golang 开发小工具</p><a id="more"></a></li></ul><h3 id="优秀的markdown编辑器"><a href="#优秀的markdown编辑器" class="headerlink" title="优秀的markdown编辑器"></a>优秀的markdown编辑器</h3><blockquote><p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。  </p></blockquote><blockquote><p>markdown 其实向来是文字爱好者和码农们的小众需求，但市面上竟涌现出了这么多种形形色色的 Markdown 编辑器，Mou、Typed、Ulysess、Macdown 等等，各有特色，难分伯仲。</p></blockquote><p>上述代码编辑软件很多都支持了markdown渲染，但比较顺手的还是以下几款markdown编辑器，有的有边写边预览功能。 </p><ul><li>马克飞象<br><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： </li></ul><blockquote><ul><li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li><li><strong>得心应手</strong> ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web；</li><li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。<br><a href="http://marxi.co/" target="_blank" rel="noopener">官网</a><br><a href="http://maxiang.info/client_zh" target="_blank" rel="noopener">马象下载</a><br><a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">Chrome 应用</a></li></ul></blockquote><ul><li><p><a href="http://markeditor.farbox.com/" target="_blank" rel="noopener">MarkEditor</a></p></li><li><p>Typora</p><blockquote><p>  简洁 、 跨平台 、 所见即所得 ，并且可定制性高，功能强大。<br>  它将「写字」和「预览」这两件事情合并了，你输入的地方，也是输出的地方，即现在很流行的 WYSIWYG（What You See Is What You Get）。其实转念一想，这不就是回到了 Office Word 嘛，只不过编辑文本时不用再去工具栏上点选，一切的格式都能通过符号来控制。<br>  点此进入 ：<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora — 官网</a></p></blockquote></li></ul><h3 id="开发环境及调试、托管相关工具"><a href="#开发环境及调试、托管相关工具" class="headerlink" title="开发环境及调试、托管相关工具"></a>开发环境及调试、托管相关工具</h3><ul><li><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a> &amp;&amp;<a href="https://www.vmware.com/cn.html" target="_blank" rel="noopener">VMware 虚拟机：面向桌面、应用、公有和混合云</a>， 虚拟机软件</li><li><a href="https://www.vagrantup.com/" target="_blank" rel="noopener">Vagrant</a></li><li><a href="https://www.navicat.com.cn/" target="_blank" rel="noopener"> PremiumSoft Navicat</a>，mysql 工具</li><li><a href="http://www.telerik.com/fiddler" target="_blank" rel="noopener">Telerik Fiddler</a> ，接口调试</li><li><a href="https://www.wireshark.org/download.html" target="_blank" rel="noopener">Wireshark</a>，数据抓包</li><li><a href="http://www.netsarang.com/" target="_blank" rel="noopener">Xmanager =&gt;XShell等</a> ，<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">Putty</a> ssh连接</li><li><a href="https://github.com" target="_blank" rel="noopener">GitHub</a> &amp;&amp; <a href="https://tortoisesvn.net/index.zh.html" target="_blank" rel="noopener">TortoiseSVN</a></li><li><a href="https://cloud.google.com/sdk/" target="_blank" rel="noopener">Google Cloud SDK  |  Google Cloud Platform</a></li><li><a href="http://www.phpstudy.net/" target="_blank" rel="noopener">PHPStudy</a>方便php开发环境<h4 id="腾讯浏览器、微信调试"><a href="#腾讯浏览器、微信调试" class="headerlink" title="腾讯浏览器、微信调试"></a>腾讯浏览器、微信调试</h4><ol><li><a href="https://x5.tencent.com/tbs/guide.html" target="_blank" rel="noopener">TBSSDK</a>/<a href="https://x5.tencent.com/tbs/guide/debug.html" target="_blank" rel="noopener">TBS Stdio</a></li><li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html?t=201715" target="_blank" rel="noopener">微信WEB调试工具</a><h4 id="网站部署"><a href="#网站部署" class="headerlink" title="网站部署"></a>网站部署</h4></li><li>FlashFXP<h4 id="常用的安卓模拟器"><a href="#常用的安卓模拟器" class="headerlink" title="常用的安卓模拟器"></a>常用的安卓模拟器</h4></li><li>夜神   网络代理</li><li>海马玩  网络代理</li><li>android stdio  安卓sdk avd</li><li>Andy  网络代理</li><li>blue stack 网络代理无法设置</li><li>tencent手游模拟器  </li></ol></li></ul><h3 id="常用编程语言"><a href="#常用编程语言" class="headerlink" title="常用编程语言"></a>常用编程语言</h3><ul><li><a href="http://www.phpcomposer.com/" target="_blank" rel="noopener">PHP Composer 中文网 </a>、<a href="http://php.net/" target="_blank" rel="noopener">PHP: Hypertext Preprocessor</a></li><li><a href="https://golang.org/" target="_blank" rel="noopener">The Go Programming Language</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://www.java.com/" target="_blank" rel="noopener">Java</a></li><li><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a></li><li><a href="http://www.ruby-lang.org/" target="_blank" rel="noopener">Ruby</a></li></ul><h3 id="资料笔记保存工具"><a href="#资料笔记保存工具" class="headerlink" title="资料笔记保存工具"></a>资料笔记保存工具</h3><ul><li>印象笔记 Evernote  &gt; 快速摘录网站内容<br><a href="https://www.yinxiang.com/download/" target="_blank" rel="noopener">官网下载印象笔记</a></li><li>GitBook &amp;&amp; Calibre &gt; markdown文件快速制作ebook<br><a href="https://www.gitbook.com/editor" target="_blank" rel="noopener">GitBook Editor官方下载</a><br><a href="http://calibre-ebook.com/" target="_blank" rel="noopener">calibre - E-book management</a></li><li>WinHTTrack Website Copier<br><a href="http://www.httrack.com/" target="_blank" rel="noopener">HTTrack Website Copier官网下载</a></li><li><a href="http://yun.baidu.com/" target="_blank" rel="noopener">百度网盘</a> </li><li>冰点文库(百度文库下载工具)<h4 id="Wiki程序"><a href="#Wiki程序" class="headerlink" title="Wiki程序"></a>Wiki程序</h4></li><li><p>amwiki</p><blockquote><p>安装<code>npm install -g amwiki</code>  </p></blockquote></li><li><p>wiki.php</p><blockquote><p>wiki.php运行在php平台，是基于Markdown的wiki程序。你的Markdown存放在 wiki.php/_posts 目录下，以.md后缀的文件形式存放，程序简陋不支持在线编辑和备份，你可以尝试将_posts目录纳入git或svn中达到团队协作。<br>git clone <a href="https://github.com/cmxiaocai/wiki.php.git" target="_blank" rel="noopener">https://github.com/cmxiaocai/wiki.php.git</a></p></blockquote></li><li><p>deepwiki</p></li></ul><h3 id="常用浏览器"><a href="#常用浏览器" class="headerlink" title="常用浏览器"></a>常用浏览器</h3><ul><li>Firefox浏览器 <blockquote><p>火狐，是由Mozilla开发的网页浏览器。我们的 使命 是创造一个开放，创新与机遇的网络环境。<br><a href="https://www.mozilla.org/" target="_blank" rel="noopener">下载 Firefox  — Mozilla</a><br>火狐浏览器扩展和插件很丰富，定制性很强，可以通过扩展方便浏览网页和开发调试网页程序。登陆火狐账号后可以实现扩展/账号/密码等的同步功能，极大的方便了网络应用。</p></blockquote></li><li>Chrome浏览器<br>功能同样十分强大，也有很多方便的插件可供下载使用。<a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="noopener">Chrome（桌面版）下载</a></li><li>~~IE，有些网站还是不得不用IE ~~。换360安全浏览器，不用装太多插件，可以IE模式。装个adblock和llastpass 即可。</li></ul><h3 id="浏览器扩展"><a href="#浏览器扩展" class="headerlink" title="浏览器扩展"></a>浏览器扩展</h3><ul><li>chrome<ol><li>Adblock Plus—Adblock Plus 已被超过 1 亿台设备使用，是世界上最受欢迎的广告拦截软件</li><li>Adobe Acrobat–将当前网页转换为 Adobe PDF 文件（仅限 Windows）</li><li>Copy as Markdown–Copy Link or Image as Markdown code</li><li>crxMouse Chrome™ Gestures, Gestures for Chrome(TM)汉化版.方便,快捷,充分发掘鼠标的所有操作.功能包括:鼠标手势,超级拖曳,滚轮手势,摇杆手势,平滑滚动,标签页列表等.</li><li>Google 文档的离线功能，利用 Google 文档产品系列离线编辑文件。</li><li>Google翻译，浏览网页时可轻松查看翻译版本。由Google翻译小组提供。</li><li>JetBrains IDE Support，HTML/CSS/JavaScript editing and JavaScript debugging using JetBrains IDEs.</li><li>jsonView jsonViewer json formatter 格式化，格式化、着色、美观、易读… jsonView处理了其他该类插件中文字符的bug,支持 json 和 jsonp 格式</li><li>Just Read，A customizable reader extensi</li><li>LastPass: Free Password Manager，LastPass,屡获殊荣的密码管理器,保存你的密码,让你安全访问任何计算机和移动设备</li><li>Postman，调试接口利器</li><li>Proxy SwitchyOmega，轻松快捷地管理和切换多个代理设置</li><li>Push to Kindle，Send web articles to your Kindle</li><li>Quick Javascript Switcher，Quick way to enable/disable Javascript</li><li>Secure Shell，Terminal emulator and SSH client ，Chrome 应用</li><li>User-Agent Switcher for Chrome ，Spoofs &amp; Mimics User-Agent strings.</li><li>拷贝为 Markdown，将你在页面中选中的HTML格式转化为Markdown格式。</li><li>滴答清单 - Todo &amp; 任务提醒，简洁, 易用的待办和任务管理工具, 帮助您高效完成所有的事情, 合理规划时间, 让生活更轻松！</li><li>金山词霸鼠标取词</li></ol></li><li>firefox<ol><li>二维码扫描器，解码 QRCode（二维码），无需网络连接</li><li>金山词霸鼠标取词，辅助金山词霸在浏览器中实现鼠标取词</li><li>网页翻译，使用火狐浏览英文网页，帮您一键翻译成中文，阅读无障碍。使用有道网页翻译2.0，您既可以选择全文翻译，也能按照您的英文水平、只翻译相应部分的词汇，阅读理解更方便。</li><li>网站 IP 信息查询，查询当前访问网站的 IP 地址的地理位置，国旗，所属 ASN，端口开放信息等信息。</li><li>印象笔记·剪藏，使用印象笔记扩展程序一键保存精彩网页内容到印象笔记帐户</li><li>Adblock Plus，广告已成往事</li><li>AutoProxy-ng，GFW was yesterday!</li><li>Build Link Markdown ，Build a markdown link from the selected text or the current page’s title.</li><li>Cookies Manager+</li><li>Dorando keyconfig</li><li>FEBE,Backup your Firefox data</li><li><del>Firebug,Web Development Evolved</del>,下岗了，用火狐自带的调试器吧，Ctrl+shift+q</li><li>Gesture Translate </li><li>HostAdmin,HostAdmin是一个帮你管理Hosts的插件，它提供了一套增强的Hosts文件语法，帮你轻松完成切换Host的工作</li><li>HttpRequester,A tool for easily making HTTP requests (GET/PUT/POST/DELETE</li><li>JSON Lite ,Fast JSON viewer - highlights, shows items count/size, handles large files</li><li>JSON-DataView,Displays JSON data in a collapsible tree structure with syntax highlights.</li><li>LastPass: Free Password Manager,Last Password you will ever need</li><li>Markdown Viewer</li><li>Push to Kindle</li><li>RESTClient,RESTClient, a debugger for RESTful web services.</li><li>S3.Google Translator</li><li>sf-note-ext</li><li>Show Location</li><li>User-Agent Switcher,Quickly and easily switch between popular user-agent strings.</li></ol></li></ul><h3 id="日常使用工具"><a href="#日常使用工具" class="headerlink" title="日常使用工具"></a>日常使用工具</h3><ul><li><del><a href="https://im.qq.com/pcqq/" target="_blank" rel="noopener">腾讯QQ</a></del> -&gt;<a href="http://tim.qq.com/" target="_blank" rel="noopener">腾讯TIM</a>、 <a href="http://weixin.qq.com/" target="_blank" rel="noopener">微信PC端</a></li><li><del><a href="http://cidian.youdao.com/" target="_blank" rel="noopener">有道词典</a></del>  or <a href="http://cp.iciba.com/" target="_blank" rel="noopener">金山词霸</a></li><li><a href="https://www.teamviewer.com/zhCN/" target="_blank" rel="noopener">TeamViewer</a></li><li><a href="https://get.adobe.com/cn/reader/completion/adm/?exitcode=0&amp;type=install&amp;re=0&amp;appId=200" target="_blank" rel="noopener">Pdf文档查看</a></li><li><a href="https://www.adobe.com/cn/products/photoshop.html?promoid=YFRVGMH9&amp;mv=other" target="_blank" rel="noopener">PhotoShop</a></li><li><a href="http://www.foxmail.com/" target="_blank" rel="noopener">Foxmail</a> &amp; <del><a href="https://www.getmailbird.com/" target="_blank" rel="noopener">MailBird</a> &amp;<a href="https://www.mozilla.org/zh-CN/thunderbird/" target="_blank" rel="noopener">Thunderbird </a></del></li></ul><h3 id="同步盘"><a href="#同步盘" class="headerlink" title="同步盘"></a>同步盘</h3><ul><li><a href="https://onedrive.live.com/?id=root&amp;cid=92A074F8A4C1889A" target="_blank" rel="noopener">OneDrive</a></li><li><a href="https://drive.google.com/drive/u/0/my-drive" target="_blank" rel="noopener">Google云端硬盘</a><h3 id="代理上网"><a href="#代理上网" class="headerlink" title="代理上网"></a>代理上网</h3></li><li><a href="https://github.com/shadowsocks/" target="_blank" rel="noopener">shadowsocks · GitHub</a>、<a href="https://shadowsocks.org/" target="_blank" rel="noopener">Shadowsocks - A secure socks5 proxy</a></li><li>SScap</li><li><a href="http://www.vpngate.net/cn/download.aspx" target="_blank" rel="noopener">VPN Gate 下载</a></li><li><del><a href="https://openvpn.net/" target="_blank" rel="noopener">OpenVpn</a></del></li><li><a href="https://github.com/xtaci/kcptun" target="_blank" rel="noopener">Kcptun GitHub</a><a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="noopener">GUI for KCPTun windows client</a></li><li><a href="http://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a>,- Bypass firewall and proxy, tunnel connections through an HTTPS and SOCKS proxy</li></ul><h3 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h3><ul><li><a href="https://ticktick.com/" target="_blank" rel="noopener">TickTick</a><br>有客户端和浏览器插件，方便记录生活琐事，管理工作任务，让你的生活变得简单。</li><li><a href="https://www.wunderlist.com/#/lists/inbox" target="_blank" rel="noopener">Wunderlist</a><br><a href="https://www.wunderlist.com/zh/download/" target="_blank" rel="noopener">下载奇妙清单 - 为你的所有设备下载最佳待办事项应用</a><h3 id="休闲跑步"><a href="#休闲跑步" class="headerlink" title="休闲跑步"></a>休闲跑步</h3></li></ul><ul><li>悦动圈</li><li>户外助手</li><li>行者户外</li><li>六只脚<h3 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h3></li></ul><ol><li>Wunderlist</li><li>金山词霸</li><li>Foxmail</li><li>Shadowsocks</li><li>KcpTun</li><li>Weixin<h3 id="未归类"><a href="#未归类" class="headerlink" title="未归类"></a>未归类</h3></li><li>Resilio Sync，BT新版</li><li>ZeroNet</li></ol>]]></content>
    
    <summary type="html">
    
      日常生活中的常用软件
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="常用软件" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="生活" scheme="https://blog.wzjs010.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="软件" scheme="https://blog.wzjs010.cc/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Vue构建项目步骤</title>
    <link href="https://blog.wzjs010.cc/2017/03/06/Vue%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%AD%A5%E9%AA%A4/"/>
    <id>https://blog.wzjs010.cc/2017/03/06/Vue构建项目步骤/</id>
    <published>2017-03-06T06:54:02.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><ol><li><p><code>webpack.config.js</code>定义程序入口 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var webpackConfig = &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    &apos;main&apos;: &apos;./src/main.js&apos;,</span><br><span class="line">    &apos;address&apos;: &apos;./src/address.js&apos;,</span><br><span class="line">    &apos;order&apos;: &apos;./src/order.js&apos;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>address.js</code>入口js，引入主View、router等组件<br><img src="/res/images/vue.jpg" alt="xx"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本步骤&quot;&gt;&lt;a href=&quot;#基本步骤&quot; class=&quot;headerlink&quot; title=&quot;基本步骤&quot;&gt;&lt;/a&gt;基本步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;定义程序入口 &lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
      <category term="技术" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Vue" scheme="https://blog.wzjs010.cc/categories/%E6%8A%80%E6%9C%AF/Vue/"/>
    
    
      <category term="vue" scheme="https://blog.wzjs010.cc/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>17年计划</title>
    <link href="https://blog.wzjs010.cc/2017/03/02/17%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    <id>https://blog.wzjs010.cc/2017/03/02/17年计划/</id>
    <published>2017-03-02T13:03:17.000Z</published>
    <updated>2018-12-04T08:26:40.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最近生活"><a href="#最近生活" class="headerlink" title="最近生活"></a>最近生活</h2><p>近期生活非常的凌乱，做个简单的总结：</p><h3 id="书读少了"><a href="#书读少了" class="headerlink" title="书读少了"></a>书读少了</h3><p>最近看的书少了，感觉到了自己的浮澡，感觉心里沉不下来。</p><h3 id="没有计划"><a href="#没有计划" class="headerlink" title="没有计划"></a>没有计划</h3><p>计划做的少了，更很少的去完成了</p><h2 id="近期安排"><a href="#近期安排" class="headerlink" title="近期安排"></a>近期安排</h2><p>近期的一些打算  </p><h3 id="去读书"><a href="#去读书" class="headerlink" title="去读书"></a>去读书</h3><p>让自己的心井下来</p><h3 id="多运动"><a href="#多运动" class="headerlink" title="多运动"></a>多运动</h3><p>需要一个健康的生活</p><h3 id="早睡眠、早起床"><a href="#早睡眠、早起床" class="headerlink" title="早睡眠、早起床"></a>早睡眠、早起床</h3><p>需要休息好</p><p>仅仅是一个测试文章，没有任何意义。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;最近生活&quot;&gt;&lt;a href=&quot;#最近生活&quot; class=&quot;headerlink&quot; title=&quot;最近生活&quot;&gt;&lt;/a&gt;最近生活&lt;/h2&gt;&lt;p&gt;近期生活非常的凌乱，做个简单的总结：&lt;/p&gt;
&lt;h3 id=&quot;书读少了&quot;&gt;&lt;a href=&quot;#书读少了&quot; class=&quot;he
      
    
    </summary>
    
      <category term="生活" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感想" scheme="https://blog.wzjs010.cc/categories/%E7%94%9F%E6%B4%BB/%E6%84%9F%E6%83%B3/"/>
    
    
      <category term="感想" scheme="https://blog.wzjs010.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
      <category term="想法" scheme="https://blog.wzjs010.cc/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
</feed>
